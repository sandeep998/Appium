package Appium_basics;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.DesiredCapabilities;

import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import io.appium.java_client.MobileBy;
import io.appium.java_client.MobileElement;
import io.appium.java_client.TouchAction;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.touch.offset.PointOption;

public class swipe_testing {

	static AndroidDriver driver;

	@BeforeClass
	public static void apkInfo() throws Exception {
		DesiredCapabilities capp = new DesiredCapabilities();
		capp.setCapability("deviceName", "QKUSQ8ON7DTS6TFI");

		capp.setCapability("platformVersion", "7.1");
		capp.setCapability("platformName", "Android");
		capp.setCapability("appPackage", "com.wt.apkinfo");
		capp.setCapability("appActivity", "com.wt.apkinfo.activity.StartActivity");
		// capp.setCapability("fullReset", true);

		capp.setCapability("app", "C:\\Users\\sandeep.mandhala\\Desktop\\apkinfo.apk");

		driver = new AndroidDriver<MobileElement>(new URL("http://127.0.0.1:4723/wd/hub"), capp);

	}

	@BeforeClass(enabled = false)
	public static void lanchApp() throws Exception {

		DesiredCapabilities capp = new DesiredCapabilities();
		capp.setCapability("deviceName", "QKUSQ8ON7DTS6TFI");

		capp.setCapability("platformVersion", "7.1");
		capp.setCapability("platformName", "Android");
		capp.setCapability("appPackage", "com.myntra.android");
		capp.setCapability("appActivity", "com.myntra.android.SplashActivity");
		// capp.setCapability("fullReset", true);

		capp.setCapability("app", "C:\\Users\\sandeep.mandhala\\Desktop\\myntra.apk");

		driver = new AndroidDriver<MobileElement>(new URL("http://127.0.0.1:4723/wd/hub"), capp);

	}

	@Test
	public static void swipeTest() throws Exception {
		for (int i = 0; i < 20; i++) {
			try {
				Thread.sleep(5000);
				WebElement isDisplayedElement = driver
						.findElement(By.xpath("//android.widget.TextView[@text='OLX India']"));
				if (isDisplayedElement.isDisplayed()) {

					isDisplayedElement.click();
					System.out.println("clicked");
					System.out.println("passed");
					break;
				}

			} catch (Exception e) {
				// scrollDown();
				swipe();

			}
		}
		File file = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
		FileUtils.copyFile(file, new File("C:\\Users\\sandeep.mandhala\\git\\.git\\Appium_project\\sceenshot.png"));

		System.out.println("swiped");

		Thread.sleep(2000);
		driver.quit();

	}

	// scrool
	private static void scrollDown() {

		// if pressX was zero it didn't work for me

		int pressX = driver.manage().window().getSize().width / 2;

		// 4/5 of the screen as the bottom finger-press point

		int bottomY = driver.manage().window().getSize().height * 4 / 5;

		System.out.println("height  " + bottomY);

		// just non zero point, as it didn't scroll to zero normally

		int topY = driver.manage().window().getSize().height / 8;

		// scroll with TouchAction by itself

		scroll(pressX, bottomY, pressX, topY);

	}

	/*
	 * 
	 * Don't forget that it's "natural scroll" where
	 * 
	 * fromY is the point where you press and toY where you release it
	 * 
	 */

	@SuppressWarnings("rawtypes")

	private static void scroll(int fromX, int fromY, int toX, int toY) {

		TouchAction touchAction = new TouchAction(driver);

		touchAction.longPress(PointOption.point(fromX, fromY)).moveTo(PointOption.point(toX, toY)).release().perform();

	}

	// no need
	public static void swipe() throws Exception {

		int pressX = driver.manage().window().getSize().width / 2;

		// 4/5 of the screen as the bottom finger-press point

		int bottomY = driver.manage().window().getSize().height * 4 / 5;

		System.out.println("height  " + bottomY);

		// just non zero point, as it didn't scroll to zero normally

		int topY = driver.manage().window().getSize().height / 8;
		
		


		TouchAction touch = new TouchAction(driver);

		touch.longPress(PointOption.point(pressX, bottomY)).moveTo(PointOption.point(pressX, topY)).release().perform();

	}

}
